import type { NextPage } from 'next';
import Head from 'next/head';
import { ChangeEvent, useCallback, useRef, useState } from 'react';
import useBookSearch from '../hooks/useBookSearch';

const Home: NextPage = () => {
    const [query, setQuery] = useState('');
    const [pageNumber, setPageNumber] = useState(1);

    const { books, hasMore, loading, error } = useBookSearch(query, pageNumber);

    const observer = useRef();
    const lastBookElementRef = useCallback(
        (node) => {
            if (loading) return;
            if (observer.current) observer.current.disconnect();
            observer.current = new IntersectionObserver((entries) => {
                if (entries[0].isIntersecting && hasMore) {
                    setPageNumber((prevPageNumber) => prevPageNumber + 1);
                }
            });
            if (node) observer.current.observe(node);
        },
        [loading, hasMore]
    );

    const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {
        setQuery(e.target.value);
        setPageNumber(1);
    };

    return (
        <div>
            <Head>
                <title>Infinite Scrilling</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="bg-dark-600">
                <div className="w-5/6 m-auto bg-dark-500 min-h-screen py-10 px-36">
                    <div className="flex justify-center">
                        <input
                            type="text"
                            placeholder="Search your book"
                            value={query}
                            onChange={handleSearch}
                            className="bg-transparent border-b-2 border-dark-600 text-white w-5/6 outline-none"
                        />
                    </div>

                    <div className="space-y-4 mt-12">
                        {books.map((book, index) => {
                            if (books.length === index + 1) {
                                return (
                                    <div
                                        ref={lastBookElementRef}
                                        key={book}
                                        className="bg-dark-600 text-white rounded-md px-7 py-2 text-lg"
                                    >
                                        {book}
                                    </div>
                                );
                            }
                            return (
                                <div
                                    key={book}
                                    className="bg-dark-600 text-white rounded-md px-7 py-2 text-lg"
                                >
                                    {book}
                                </div>
                            );
                        })}

                        {loading && <div className="px-7 text-white text-xl">Loading...</div>}

                        {error && <div className="px-7 text-white text-xl">Error</div>}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Home;
